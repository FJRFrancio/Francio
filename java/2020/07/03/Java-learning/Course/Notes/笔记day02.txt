关键字：就是在java语言编程的时候，在关键的地方使用的单词，体现关键的地方的含义，这些单词都是特有的事先定义好的

保留字：可能在以后被用来作为关键字的单词，java已经把这些单词预定了，这些单词尽量就不要在编程中去随意使用

abc_1$

标识符可以是Test1,不能是1Test

比如，类名不能直接使用class,可以是class1

命名规范，是一套约定俗成的规则


代数，未知数的概念
设x=1，x+1=?

java中变量的定义：数据类型 变量名 = 变量的值，例如：int i = 1

int i = 1
i = 2

注意：声明变量过程中的这个=，不是数学意义上的=，在java编程中代表赋值（赋予变量值）

变量的类型：声明的变量的数据类型就是变量的类型

在java中，数据类型分为基本数据类型和引用数据类型，其中基本数据类型有8中，除了这8中之外其他所有的数据类型都是引用数据类型

byte的范围-128到127之间，声明byte类型变量的时候赋值不能超过这个范围，给byte类型变量赋值时不能超过这个范围

byte b = 130，这个就是超出范围了是错误的

byte b = 126

bit是什么单位？

0100110，这个就7bit


byte b = 126
int i = 1
short s = 1
long l = 3l,这个long类型变量赋值时要在值的后面跟上一个字母l

double d = 1.22
float f = 1.22f,float类型变量赋值时值后面跟上字母f

字符：用英文的单引号括起来的单个的字母、数字、符号

比如：
char c1 = 'a'
char c2 = '1'
char c3 = '%'

char c4 = '\n'

char c5 = '\''

boolean b1 = true

boolean b2 = false

byte short int long float double char boolean,8种基本数据类型

字符串？就是由0到多个字母数字符号共同组成的一个串，这个串要用英文的双引号括起来

String str = "hello world";
System.out.println(str);

引用类型，都可以用null作为值，也就是说可以在初始化的时候赋值为null
String是引用类型，也就是说可以使用null作为值

int i0 = 1
int i1 = 1
以上这种会在内存中存储2个1的值

String s0 = "hello"
String s1 = "hello"
这种的，不会在内存中存在两个"hello"，只存在1一个"hello"
假设"hello"的内存地址xxxxx,声明s0变量时给s0赋值"hello"实际上让s0变量引用"hello"的内存地址xxxxx；当我们再声明变量s1也赋值"hello"的时候实际上也是直接把已经存在的"hello"的内存地址给s1引用


String s3 = "he" + "ll" + "o";

创建一个java文件，用文本编辑器打开，写代码，打开dos界面，javac编译，java运行

集成开发环境就是为了解决刚才咱们所说的问题，里面包含文本编辑工作，自动编译，简化运行，随时进行代码的调试

ASCII码：上个世纪60年代，美国制定了一套字符编码，对英语字符与二进制位之间的关系，做了统一规定。这被称为ASCII码。ASCII码一共规定了128个字符的编码，比如空格“SPACE”是32（二进制00100000），大写的字母A是65（二进制01000001）。

数字类型的运算规则：
1、有多种类型的数据混合运算时，系统首先自动将所有数据转换成容量最大的那种数据类型，然后再进行计算。数字类型的从小到大分别是byte、short、int、long、float、double。
2、数字类型的运算中，多个相同类型变量参与的运算，变量要先转换为相对应的数据类型的默认类型（比如两个byte类型的变量相加，会先把两个byte类型的变量转换成默认的int类型之后再计算，得到的结果是int类型）。这种情况适用于变量的数据类型的容量比默认类型的容量小，（比如byte，short，都比int小）
3、byte,short,char之间不会相互转换，他们三者在计算时首先转换为int类型。



